Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `#version 300 es 
  precision highp float;

  out vec4 fragmentColor;
  in vec2 texCoord; // passed from VS
  in vec3 worldNormal;
  in vec4 worldPosition;  
  in vec3 modelPosition;
  // we need to bind texture to this
  uniform sampler2D colorTexture;

  float snoise(vec3 r) {
    vec3 s = vec3(7502, 22777, 4767);
    float f = 0.0;
    for(int i=0; i<16; i++) {
        f += sin( dot(s - vec3(32768, 32768, 32768), r)/ 65536.0);
        s = mod(s, 32768.0) * 2.0 + floor(s / 32768.0);
    }
    return f / 32.0 + 0.5;
  }
  uniform struct{
      float noiseFreq;
      float noiseExp;
      float noiseAmp;
      vec3 lightColor;
      vec3 darkColor;
  } marbleProperties;

  void main(void) {
    float w = pow((sin(modelPosition.x) + 1.0)/2.0, 4.0) + pow(snoise(modelPosition * marbleProperties.noiseFreq), marbleProperties.noiseExp) * marbleProperties.noiseAmp;
    // float w = fract(modelPosition.x * 60.0);

    vec3 color = mix(marbleProperties.lightColor, marbleProperties.darkColor, w);
    fragmentColor.rgb = color;
    fragmentColor.a = 1.0;
  }
`;