Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `#version 300 es 
  precision highp float;

  out vec4 fragmentColor;
  in vec2 texCoord; // passed from VS
  in vec3 worldNormal;
  in vec4 worldPosition;  
  // we need to bind texture to this
  uniform sampler2D colorTexture;

  uniform struct  {
  	vec3 position;
  } camera;

  uniform struct {
    vec4 position[8]; // xyz is the direction, w is 0
    vec4 powerDensity[8];  // w ignored
  } lighting;

  void main(void) {
  	vec3 normal = normalize(worldNormal);
  	vec3 position = worldPosition.xyz / worldPosition.w; 
    vec3 viewDir = normalize(camera.position - position);

    // Lambertian shading
    fragmentColor.rgb = lighting.powerDensity[0].rgb * texture(colorTexture, texCoord).rgb * dot(worldNormal, lighting.position[0].xyz);
    fragmentColor.a = 1.0;

    // Phong-Blinn shading
    fragmentColor.rgb = lighting.powerDensity[0].rgb * texture(colorTexture, texCoord).rgb * dot(worldNormal, lighting.position[0].xyz) + lighting.powerDensity[0].rgb * vec3(10.0,10.0,10.0) * pow(dot(normal, normalize(viewDir + lighting.position[0].xyz)), 20.0);

  }

`;